<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DefaultName" xml:space="preserve">
    <value>Untitled</value>
  </data>
  <data name="DirectoryNotExistError" xml:space="preserve">
    <value>Directory '{0}' doesn't exist.</value>
  </data>
  <data name="ExceptionExternalProcess" xml:space="preserve">
    <value>Exception was thrown from external process.</value>
  </data>
  <data name="ExceptionUserCancelled" xml:space="preserve">
    <value>Run cancelled by user.</value>
  </data>
  <data name="QtpCleanupError" xml:space="preserve">
    <value>QTPActivity.TestCleanup - exception {0}</value>
  </data>
  <data name="QtpNotLaunchedError" xml:space="preserve">
    <value>QTP is not launched.</value>
  </data>
  <data name="QtpOutputError" xml:space="preserve">
    <value>QTP could not handle output arguments.</value>
  </data>
  <data name="QtpRunError" xml:space="preserve">
    <value>QTP could not run.</value>
  </data>
  <data name="QtpUnsavedError" xml:space="preserve">
    <value>Test execution stopped due to unsaved changes in QuickTest. 
Save the test in QuickTest and then run it again.</value>
  </data>
  <data name="ResultFileNotExistError" xml:space="preserve">
    <value>Could not find results file '{0}'.</value>
  </data>
  <data name="STExecuterNotFound" xml:space="preserve">
    <value>Micro Focus Testing Tool is missing : Micro Focus Service Test/Micro Focus Unified Function Testing</value>
  </data>
  <data name="XmlNodeNotExistError" xml:space="preserve">
    <value>XML node '{0}' could not be found.</value>
  </data>
  <data name="FileSystemTestsRunner_No_HP_testing_tool_is_installed_on" xml:space="preserve">
    <value>No Micro Focus testing tool is installed on {0}</value>
  </data>
  <data name="AlmRunnerCantFindTestSet" xml:space="preserve">
    <value>Could not find TestSet {0}</value>
  </data>
  <data name="AlmRunnerConnParamEmpty" xml:space="preserve">
    <value>One or more of the required connection parameters is empty.</value>
  </data>
  <data name="AlmRunnerDisplayLink" xml:space="preserve">
    <value>Copy the following report link inside an IE browser to view the test run results: {0}</value>
  </data>
  <data name="AlmRunnerDisplayTest" xml:space="preserve">
    <value>Test set name: {0}, Test set id: {1}</value>
  </data>
  <data name="AlmRunnerDisplayTestRunOnHost" xml:space="preserve">
    <value>Test {0}: {1} will run on host: {2}</value>
  </data>
  <data name="AlmRunnerErrorAuthorization" xml:space="preserve">
    <value>Cannot Login to QC: Authorization failed.</value>
  </data>
  <data name="AlmRunnerErrorBadQcInstallation" xml:space="preserve">
    <value>Check that your QC client is installed properly 
{0} 
{1}.</value>
  </data>
  <data name="AlmRunnerErrorConnectToProj" xml:space="preserve">
    <value>Cannot connect to QC: Project / Domain does not exist.</value>
  </data>
  <data name="AlmRunnerErrorGettingStat" xml:space="preserve">
    <value>Problem in updating tests status for test: {0} 
{1}</value>
  </data>
  <data name="AlmRunnerNoSuchFolder" xml:space="preserve">
    <value>folder {0} cannot be found in ALM</value>
  </data>
  <data name="AlmRunnerNumTests" xml:space="preserve">
    <value>Number of tests in set:</value>
  </data>
  <data name="AlmRunnerProblemWithHost" xml:space="preserve">
    <value>Problem while setting remote host: {0}</value>
  </data>
  <data name="AlmRunnerRunError" xml:space="preserve">
    <value>Problem while running TestSet: </value>
  </data>
  <data name="AlmRunnerRunIdCaption" xml:space="preserve">
    <value>Run ID:</value>
  </data>
  <data name="AlmRunnerSchedStarted" xml:space="preserve">
    <value>Scheduler started at:</value>
  </data>
  <data name="AlmRunnerServerUnreachable" xml:space="preserve">
    <value>ALM server {0} unreachable, check that server Url is correct</value>
  </data>
  <data name="AlmRunnerIncorectCredentials" xml:space="preserve">
    <value>Unable to login. Please check username and password.</value>
  </data>
  <data name="AlmRunnerStartingExecution" xml:space="preserve">
    <value>Starting test set execution</value>
  </data>
  <data name="AlmRunnerStat" xml:space="preserve">
    <value>Test: {0}, Id: {1}, Execution status: {2}</value>
  </data>
  <data name="AlmRunnerStatWithMessage" xml:space="preserve">
    <value>Test: {0}, Id: {1}, Execution status: {2}, Message: {3}</value>
  </data>
  <data name="AlmRunnerTestCompleteCaption" xml:space="preserve">
    <value>Test complete:</value>
  </data>
  <data name="AlmRunnerTestsetDone" xml:space="preserve">
    <value>Test set: {0}, finished at {1}</value>
  </data>
  <data name="AlmRunnerTestStat" xml:space="preserve">
    <value>Test: {0}, Status: {1}, Message: {2}, Link: {3}</value>
  </data>
  <data name="FsRunnerNoValidTests" xml:space="preserve">
    <value>=============================== There are no valid tests to run! ===============================</value>
  </data>
  <data name="FsRunnerRunningTest" xml:space="preserve">
    <value>Running test: {0}</value>
  </data>
  <data name="FsRunnerTestDone" xml:space="preserve">
    <value>Test result: {0}</value>
  </data>
  <data name="FsRunnerTestDoneWarnings" xml:space="preserve">
    <value>Test result: Succeeded with Warnings</value>
  </data>
  <data name="FsRunnerTestsFound" xml:space="preserve">
    <value>{0} tests found:</value>
  </data>
  <data name="GeneralAbortedByUser" xml:space="preserve">
    <value>========================\nJob was aborted by user!\n========================</value>
  </data>
  <data name="GeneralDoubleSeperator" xml:space="preserve">
    <value>============================================================================</value>
  </data>
  <data name="GeneralErrorWithStack" xml:space="preserve">
    <value>Error: {0}\n{1}</value>
  </data>
  <data name="GeneralFileNotFound" xml:space="preserve">
    <value>&gt;&gt;&gt; File/Folder not found: {0}</value>
  </data>
  <data name="GeneralQtpNotInstalled" xml:space="preserve">
    <value>QTP is not installed on {0}.</value>
  </data>
  <data name="GeneralStarted" xml:space="preserve">
    <value>"Started..."</value>
  </data>
  <data name="GeneralStopAborted" xml:space="preserve">
    <value>Test run was aborted by user. Stopping all tests.</value>
  </data>
  <data name="GeneralTestCanceled" xml:space="preserve">
    <value>Test run was cancelled</value>
  </data>
  <data name="GeneralTimedOut" xml:space="preserve">
    <value>============== Job timed out! ==============</value>
  </data>
  <data name="GeneralTimeoutExpired" xml:space="preserve">
    <value>Timeout has expired</value>
  </data>
  <data name="LauncherDisplayRunmode" xml:space="preserve">
    <value>Run mode is set to: {0}</value>
  </data>
  <data name="LauncherDisplayStatistics" xml:space="preserve">
    <value>Run status: {0}, total tests: {1}, succeeded: {2}, failures: {3}, errors: {4}, warnings: {5}</value>
  </data>
  <data name="LauncherDoubleSeparator" xml:space="preserve">
    <value>================================================</value>
  </data>
  <data name="LauncherIncorrectRunmode" xml:space="preserve">
    <value>The parameter 'runMode' should be: RUN_LOCAL | RUN_REMOTE | RUN_PLANNED_HOST</value>
  </data>
  <data name="LauncherNoTests" xml:space="preserve">
    <value>No test sets were found. Add some test sets or folders.</value>
  </data>
  <data name="LauncherNoValidTests" xml:space="preserve">
    <value>No valid tests were found. Fix the test paths.</value>
  </data>
  <data name="LauncherNoCleanupTestsFound" xml:space="preserve">
    <value>No cleanup tests were found. Add some cleanup tests.</value>
  </data>
  <data name="LauncherNoValidCleanupTests" xml:space="preserve">
    <value>No valid cleanup tests were found. Fix the test paths.</value>
  </data>
  <data name="LauncherNoFailedTestsFound" xml:space="preserve">
    <value>No tests were selected to rerun.</value>
  </data>
  <data name="LauncherNoValidFailedTests" xml:space="preserve">
    <value>No valid failed tests to rerun were found. Fix the test paths.</value>
  </data>
  <data name="LauncherParamRequired" xml:space="preserve">
    <value>The parameter '{0}' is required to run a test from QC.</value>
  </data>
  <data name="LauncherRunnerDisposeError" xml:space="preserve">
    <value>An error occurred while disposing runner: {0}.</value>
  </data>
  <data name="LauncherStNotInstalled" xml:space="preserve">
    <value>Service Test is not installed on {0}</value>
  </data>
  <data name="LauncherTimeoutNotNumeric" xml:space="preserve">
    <value>almTimeout should be an integer!</value>
  </data>
  <data name="LuancherDisplayTimout" xml:space="preserve">
    <value>Timeout is set to: {0}</value>
  </data>
  <data name="SingleSeperator" xml:space="preserve">
    <value>-------------------------------------------------------------------------------------------------------</value>
  </data>
  <data name="LauncherNoResFilenameFound" xml:space="preserve">
    <value>No results filename provided, please add one</value>
  </data>
  <data name="LauncherNoRuntype" xml:space="preserve">
    <value>No runType parameter was provided. Enter a runType (Alm/FileSystem/LoadRunner).</value>
  </data>
  <data name="LauncherNoTestsFound" xml:space="preserve">
    <value>No tests were found. Add tests or folders containing tests.</value>
  </data>
  <data name="LoadRunnerNotInstalled" xml:space="preserve">
    <value>LoadRunner is not installed on {0}.</value>
  </data>
  <data name="HPToolsAssemblyResolverWrongVersion" xml:space="preserve">
    <value>The LoadRunner version must be 11.52 or higher. Check that '{0}' has a compatible version of LoadRunner.</value>
  </data>
  <data name="CannotDeleteReportFolder" xml:space="preserve">
    <value>Unable to delete report folder {0}.</value>
  </data>
  <data name="FailedToCreateTempDirError" xml:space="preserve">
    <value>Failed to create Temp Dir {0}.</value>
  </data>
  <data name="LrAnalysingResults" xml:space="preserve">
    <value>Analyzing results...</value>
  </data>
  <data name="LrCleanENV" xml:space="preserve">
    <value>Cleaning up the environment...</value>
  </data>
  <data name="LrControllerFailedToStop" xml:space="preserve">
    <value>Controller failed to stop.</value>
  </data>
  <data name="LrErrorIgnored" xml:space="preserve">
    <value>Ignored error message : "{0}" contains ignored string "{1}".</value>
  </data>
  <data name="LrErrorSummeryNum" xml:space="preserve">
    <value>{0} ignored , {1} errors</value>
  </data>
  <data name="LRExceptionInAnalysisRunner" xml:space="preserve">
    <value>Exception while trying to analyze results:</value>
  </data>
  <data name="LrFailedToOpenScenario" xml:space="preserve">
    <value>Cannot open scenario {0} ret code = {1}.</value>
  </data>
  <data name="LrFailToOpenController" xml:space="preserve">
    <value>Failed to start the LoadRunner Controller.</value>
  </data>
  <data name="LrFailToRegisterEndScenarioEvent" xml:space="preserve">
    <value>Cannot register the end scenario event. End scenario detection is based on Vuser status.</value>
  </data>
  <data name="LrInitScenario" xml:space="preserve">
    <value>Preparing scenario {0} for execution.</value>
  </data>
  <data name="LrScenarioCollateFail" xml:space="preserve">
    <value>Cannot collate results ret code = {0}.</value>
  </data>
  <data name="LrScenarioEnded" xml:space="preserve">
    <value>Scenario {0} ended after {1}:{2}:{3}.</value>
  </data>
  <data name="LrScenarioEndedTimeOut" xml:space="preserve">
    <value>Timeout passed. Stopping scenario by force.</value>
  </data>
  <data name="LrScenarioEndedWithErrors" xml:space="preserve">
    <value>Errors occurred during scenario execution. Stopping the scenario run.</value>
  </data>
  <data name="LrScenarioTimeOut" xml:space="preserve">
    <value>Scenario Execution timeout {0} (d:h:m:s) passed.</value>
  </data>
  <data name="LrScenarioValidationCannotConnectLG" xml:space="preserve">
    <value>Cannot connect to Load Generator {0}.</value>
  </data>
  <data name="LrScenarioValidationCannotSyncLG" xml:space="preserve">
    <value>Cannot synchronize with Load Generator {0}.</value>
  </data>
  <data name="LrScenarioValidationFailNoLGs" xml:space="preserve">
    <value>No Load Generators were configured for the scenario {0.}</value>
  </data>
  <data name="LrScenarioValidationFailNoSLA" xml:space="preserve">
    <value>Scenario {0}  does not have an SLA configuration.</value>
  </data>
  <data name="LrScenarioValidationLGConnected" xml:space="preserve">
    <value>Load Generator {0} connected</value>
  </data>
  <data name="LrScenarioValidationLGNotReady" xml:space="preserve">
    <value>Could not connect to Load Generator {0}.</value>
  </data>
  <data name="LrStartScenario" xml:space="preserve">
    <value>Starting scenario...</value>
  </data>
  <data name="LrStartScenarioFail" xml:space="preserve">
    <value>Cannot start scenario {0}. Return Code = {1}.</value>
  </data>
  <data name="LrStopScenarioEnded" xml:space="preserve">
    <value>Stop scenario failed. Return code = {0}</value>
  </data>
  <data name="LRTestFailDueToFatalErrors" xml:space="preserve">
    <value>Test FAILED. {0} errors occurred during scenario execution.</value>
  </data>
  <data name="LRTestPassed" xml:space="preserve">
    <value>Test PASSED</value>
  </data>
  <data name="LRTestWarningDueToIgnoredErrors" xml:space="preserve">
    <value>Setting test state to WARNING. {0} Ignored errors occurred during scenario execution.</value>
  </data>
  <data name="LrSLARuleFailed" xml:space="preserve">
    <value>SLA rule {0} failed: GoalValue = {1} ActualValue = {2}</value>
  </data>
  <data name="LrAnalysisRunTimeError" xml:space="preserve">
    <value>Error during Analysis run. See output console for details</value>
  </data>
  <data name="LrAnalysisTimeOut" xml:space="preserve">
    <value>Timeout for Analysis passed.</value>
  </data>
  <data name="LrAnlysisInitFail" xml:space="preserve">
    <value>Failed to initialize Analysis launcher.</value>
  </data>
  <data name="LrAnlysisResults" xml:space="preserve">
    <value>Analysis Results:</value>
  </data>
  <data name="LRErrorReasonSummaryTitle" xml:space="preserve">
    <value>Errors during scenario run: \n</value>
  </data>
  <data name="LRErrorsSummary" xml:space="preserve">
    <value>Error(s) summary: </value>
  </data>
  <data name="LrScenarioOpenTimeOut" xml:space="preserve">
    <value>Scenario open process timed out.</value>
  </data>
  <data name="GeneralDuplicateParameterWarning" xml:space="preserve">
    <value>The Parameter {0} of test: {1} is defined more than once</value>
  </data>
  <data name="UFT_LeanFT_Running" xml:space="preserve">
    <value>UFT cannot start while the LeanFT engine is running.</value>
  </data>
  <data name="UFT_Sprinter_Running" xml:space="preserve">
    <value>UFT cannot start while Micro Focus Sprinter is running.</value>
  </data>
  <data name="ParallelRunnerExecutableNotFound" xml:space="preserve">
    <value />
  </data>
  <data name="InvalidReportPath" xml:space="preserve">
    <value>Invalid report path provided: '{0}'</value>
  </data>
  <data name="LrSummaryDataLoggingError" xml:space="preserve">
    <value>An error occured during summary data logging: {0}</value>
  </data>
  <data name="LrRTSError" xml:space="preserve">
    <value>An error occured during RTS in script {0}: {1}</value>
  </data>
  <data name="SmallDoubleSeparator" xml:space="preserve">
    <value>===========================</value>
  </data>
  <data name="CreateTDConnection" xml:space="preserve">
    <value>CreateTDConnection</value>
  </data>
  <data name="OldVersionOfQC" xml:space="preserve">
    <value>You are using an old version of QC. Please update ALM QC.</value>
  </data>
  <data name="MissingParameterName" xml:space="preserve">
    <value>Parameter name missing. Please specify the parameter name.</value>
  </data>
  <data name="MissingParameterValue" xml:space="preserve">
    <value>Parameter value is unspecified. Please provide a value or an empty string.</value>
  </data>
  <data name="AlmTestSetsRunnerGetFolderError" xml:space="preserve">
    <value>Cannot find the test folder.</value>
  </data>
  <data name="AlmTestSetsRunnerNoTestAfterApplyingFilters" xml:space="preserve">
    <value>No test meets the filtering criteria</value>
  </data>
  <data name="AlmRunnerCantFindTest" xml:space="preserve">
    <value>Could not find Test {0}</value>
  </data>
  <data name="AlmRunnerTestsetAborted" xml:space="preserve">
    <value>Test set: {0}, aborted at {1}</value>
  </data>
  <data name="AlmRunnerUpdateStateAfterAbort" xml:space="preserve">
    <value>Test: {0} &gt;&gt; Previous state -&gt; {1}; After update state -&gt; {2}</value>
  </data>
  <data name="AlmRunnerErrorParameterFormat" xml:space="preserve">
    <value>Invalid parameter format, check job configuration to re-configure parameter definitions for test: {0}. Falling back to default parameter definitions.</value>
  </data>
  <data name="MissingQuotesInParamFormat" xml:space="preserve">
    <value>Missing quotes for {0} in parameter definition.</value>
  </data>
  <data name="FsRunnerErrorParameterFormat" xml:space="preserve">
    <value>Invalid parameter format, check job configuration to re-configure parameter definitions for test: {0}. Falling back to default values, without skipping this test.</value>
  </data>
  <data name="McInvalidToken" xml:space="preserve">
    <value>Invalid execution token for Digital Lab, should contain ClientID, SecretKey and TenantID.</value>
  </data>
  <data name="McMalformedTokenInvalidKey" xml:space="preserve">
    <value>Malformed execution token for Digital Lab, invalid key value: {0}.</value>
  </data>
  <data name="McMalformedTokenInvalidKeyValueSeparator" xml:space="preserve">
    <value>Malformed execution token for Digital Lab, key-value pairs are not separated by {0}.</value>
  </data>
  <data name="McMalformedTokenMissingKeyValuePair" xml:space="preserve">
    <value>Malformed execution token for Digital Lab, token without key-value.</value>
  </data>
  <data name="FsDuplicateParamNames" xml:space="preserve">
    <value>Duplicate parameter name entry found, please check the parameters' specification.</value>
  </data>
  <data name="AlmDuplicateParameter" xml:space="preserve">
    <value>Duplicate parameter name entry found, please check the parameters' specification, falling back to default parameters for {0}. test or testset.</value>
  </data>
  <data name="GeneralParameterTypeMismatchWith1Type" xml:space="preserve">
    <value>Input parameter type mismatch (skipped), check your test configuration in UFT. param: '{0}'</value>
  </data>
  <data name="GeneralParameterTypeMismatchWith2Types" xml:space="preserve">
    <value>Illegal input parameter type (skipped). param: '{0}'. expected type: '{1}'. actual type: '{2}'</value>
  </data>
  <data name="GeneralParameterUsage" xml:space="preserve">
    <value>Using parameter {0} = {1}</value>
  </data>
  <data name="GeneralParameterUsageMask" xml:space="preserve">
    <value>Using parameter {0} = **********</value>
  </data>
  <data name="UftLaunchAsUserNotSupported" xml:space="preserve">
    <value>The installed version of UFT One does not support the LaunchAsUser method. Please use the version 2023 or later.</value>
  </data>
  <data name="McEmptyHostAddress" xml:space="preserve">
    <value>Empty Digital Lab Server.</value>
  </data>
  <data name="McInvalidUrl" xml:space="preserve">
    <value>Invalid Digital Lab Server URL: '{0}'.</value>
  </data>
  <data name="CloudBrowserNotSupported" xml:space="preserve">
    <value>Cloud Browser is not supported in UFT One {0}. Please upgrade to UFT One 23.4 or later.</value>
  </data>
</root>