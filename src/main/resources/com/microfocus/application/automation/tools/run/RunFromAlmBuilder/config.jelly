<!--
 ~ Certain versions of software accessible here may contain branding from Hewlett-Packard Company (now HP Inc.) and Hewlett Packard Enterprise Company.
 ~ This software was acquired by Micro Focus on September 1, 2017, and is now offered by OpenText.
 ~ Any reference to the HP and Hewlett Packard Enterprise/HPE marks is historical in nature, and the HP and Hewlett Packard Enterprise/HPE marks are the property of their respective owners.
 ~ __________________________________________________________________
 ~ MIT License
 ~
 ~ Copyright 2012-2023 Open Text
 ~
 ~ The only warranties for products and services of Open Text and
 ~ its affiliates and licensors ("Open Text") are as may be set forth
 ~ in the express warranty statements accompanying such products and services.
 ~ Nothing herein should be construed as constituting an additional warranty.
 ~ Open Text shall not be liable for technical or editorial errors or
 ~ omissions contained herein. The information contained herein is subject
 ~ to change without notice.
 ~
 ~ Except as specifically indicated otherwise, this document contains
 ~ confidential information and a valid license is required for possession,
 ~ use or copying. If this work is provided to the U.S. Government,
 ~ consistent with FAR 12.211 and 12.212, Commercial Computer Software,
 ~ Computer Software Documentation, and Technical Data for Commercial Items are
 ~ licensed to the U.S. Government under vendor's standard commercial license.
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License.
 ~ ___________________________________________________________________
  -->
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
    <st:once>
        <script type="text/javascript" src="${rootURL}/plugin/hp-application-automation-tools-plugin/js/almUtils.js"/>
    </st:once>

    <style>
        #testName {
            width: 300px;
            margin-bottom: 10px;
        }

        table tr td div.help {
            margin-left: 12px;
            background: none;
            border: none;
        }

        input[name="runfromAlm.isFilterTestsEnabled"],
        input[name="areParametersEnabled"] {
            margin-left: 35px;
        }

        .help {
            border: none;
            background: none !important;
            background-color: transparent;
        }

        table td .help {
            background: none;
        }

        table tr[nameref^="rowSetStart"] {
            background: none;
        }

        table tr[nameref^="cb20"] {
           background-color: transparent;
        }

        textarea.jenkins-input, textarea.setting-input {
            resize: vertical;
        }

        [name="runfromalm.isSSOEnabled"] {
            position: relative;
            top: 1px !important;
        }

        [name="runfromAlm.isFilterTestsEnabled"] {
            position: relative;
            top: 2px;
        }

        .info {
            margin-left: -15px;
        }

        div.setting-main {
            width: 100%;
        }
    </style>

    <!--
      ~ [JENKINS-64639]: This table is only for drawing information. Also, the tr and td are removed by Jenkins core and the generated HTML doesn't contain it.
      -->
	<j:if test="${empty(descriptor.almServers)}">
        <tr>
          <td/>
          <td colspan="2">
            <div class="help" style="display:block; margin-left: -10px;">
              ${%AlmServersAreNotDefined}
            </div>
          </td>
          <td/>
        </tr>
	</j:if>

    <tr>
      <td/>
      <td colspan="2">
        <div class="help" style="display:block; margin-left: -10px;">
          ${%DontForgetThePublisher}
        </div>
      </td>
      <td/>
    </tr>

    <tr>
        <td/>
        <td colspan="2">
            <div class="help" style="display:block; margin-left: -10px;">
                The credentials for <b>"Run from ALM"</b> can be configured at global level from <b>Jenkins Configure System</b> page, or at job level for each job.
            </div>
        </td>
        <td/>
    </tr>

    <f:entry field="almServerName">
      <label>ALM server</label>
      <f:select clazz="alm-server-name"/>
    </f:entry>

    <j:set var="expectedScope" value="${instance.credentialsScopeOrDefault}"/>
    <f:entry>
        <label>ALM Credentials Scope</label>
        <f:entry field="almCredentialsScope">
            <select name="almCredentialsScope">
                <j:forEach var="scope" items="${descriptor.almCredentialScopes}">
                    <f:option selected="${scope == expectedScope}" value="${scope.value}">
                        ${scope.description}
                    </f:option>
                </j:forEach>
            </select>
        </f:entry>
    </f:entry>

    <f:entry field="isSSOEnabled">
        <f:checkbox title="SSO enabled" name="runfromalm.isSSOEnabled" checked="${instance.runFromAlmModel.isSSOEnabled}"
                value="${instance.runFromAlmModel.isSSOEnabled}"/>
    </f:entry>

     <f:entry field="almUserName">
          <div class="sys-alm-username">
            <label>ALM username</label>
            <f:select clazz="usernameList" />
          </div>
     </f:entry>

    <f:entry field="almClientID">
         <div class="sys-alm-client-id">
            <label>ALM Client ID</label>
            <f:select clazz="clientIDList" />
         </div>
    </f:entry>

    <f:entry>
        <div class="job-alm-client-id">
            <label>Client ID</label>
            <f:entry field="almClientID">
                <f:textbox clazz="required" checkMessage="Client ID must be set"/>
            </f:entry>
        </div>
    </f:entry>

    <f:entry>
        <div class="job-alm-secret">
            <label>API key secret</label>
            <f:entry field="almApiKey">
                <f:password clazz="required" checkMessage="API key secret must be set" value="${instance.runFromAlmModel.almApiKey}"/>
            </f:entry>
        </div>
    </f:entry>

    <f:entry>
        <div class="job-alm-username">
            <label>Username</label>
            <f:entry field="almUserName">
                <f:textbox clazz="required" checkMessage="User name must be set"/>
            </f:entry>
        </div>
    </f:entry>

    <f:entry>
        <div class="job-alm-password">
            <label>Password</label>
            <f:entry field="almPassword">
                <f:password value="${instance.runFromAlmModel.almPassword}"/>
            </f:entry>
        </div>
    </f:entry>

    <f:entry>
        <label>Domain</label>
        <f:entry field="almDomain">
            <f:textbox name="runfromalm.almDomain" value="${instance.runFromAlmModel.almDomain}" />
        </f:entry>
    </f:entry>

    <f:entry>
        <label>Project</label>
        <f:entry field="almProject">
            <f:textbox name="runfromalm.almProject" value="${instance.runFromAlmModel.almProject}"/>
        </f:entry>
    </f:entry>

    <f:entry>
        <label>Test sets</label>
        <f:entry field="almTestSets">
            <f:expandableTextbox name="runfromalm.almTestSets" value="${instance.runFromAlmModel.almTestSets}"/>
        </f:entry>
    </f:entry>

    <f:entry>
        <label>Timeout</label>
        <f:entry field="almTimeout">
            <f:textbox name="runfromalm.almTimeout" value="${instance.runFromAlmModel.almTimeout}"/>
        </f:entry>
    </f:entry>

    <f:optionalBlock name="areParametersEnabled" title="Specify test parameters" inline="true" checked="${instance.areParametersEnabled}">
        <f:entry field="specifyParametersModel">
            <f:property field="specifyParametersModel"/>
        </f:entry>
    </f:optionalBlock>

    <f:optionalBlock title="Filter ALM test sets" name="runfromAlm.isFilterTestsEnabled" field="isFilterTestsEnabled" inline="true">
        <f:entry field="filterTestsModel">
            <f:property field="filterTestsModel" />
        </f:entry>
    </f:optionalBlock>

    <f:advanced>
        <f:entry>
            <label>Run mode</label>
            <f:entry field="almRunMode">
                <select name="runfromalm.almRunMode" >
                    <j:forEach var="runMode" items="${descriptor.almRunModes}">
                        <f:option selected="${runMode.value == instance.runFromAlmModel.almRunMode}" value="${runMode.value}">
                          ${runMode.description}
                        </f:option>
                    </j:forEach>
                </select>
            </f:entry>
        </f:entry>

        <f:entry>
            <label>Testing Tool host</label>
            <f:entry field="almRunHost">
                <f:textbox name="runfromalm.almRunHost" value="${instance.runFromAlmModel.almRunHost}"/>
            </f:entry>
        </f:entry>
    </f:advanced>
    <script>
        setupAlmCredentials(); // defined in almUtils.js, here we know the elements are loaded so we can show/hide credentials based on isSSOEnabled and Scope
    </script>
</j:jelly>
