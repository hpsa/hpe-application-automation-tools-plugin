<!--
 ~ Certain versions of software accessible here may contain branding from Hewlett-Packard Company (now HP Inc.) and Hewlett Packard Enterprise Company.
 ~ This software was acquired by Micro Focus on September 1, 2017, and is now offered by OpenText.
 ~ Any reference to the HP and Hewlett Packard Enterprise/HPE marks is historical in nature, and the HP and Hewlett Packard Enterprise/HPE marks are the property of their respective owners.
 ~ __________________________________________________________________
 ~ MIT License
 ~
 ~ Copyright 2012-2023 Open Text
 ~
 ~ The only warranties for products and services of Open Text and
 ~ its affiliates and licensors ("Open Text") are as may be set forth
 ~ in the express warranty statements accompanying such products and services.
 ~ Nothing herein should be construed as constituting an additional warranty.
 ~ Open Text shall not be liable for technical or editorial errors or
 ~ omissions contained herein. The information contained herein is subject
 ~ to change without notice.
 ~
 ~ Except as specifically indicated otherwise, this document contains
 ~ confidential information and a valid license is required for possession,
 ~ use or copying. If this work is provided to the U.S. Government,
 ~ consistent with FAR 12.211 and 12.212, Commercial Computer Software,
 ~ Computer Software Documentation, and Technical Data for Commercial Items are
 ~ licensed to the U.S. Government under vendor's standard commercial license.
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License.
 ~ ___________________________________________________________________
  -->

<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout"
         xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:cv="/lib/custom">

    <!--<script type="text/javascript" src="${rootURL}/plugin/hp-application-automation-tools-plugin/js/fileSystemUtils.js"/>-->

    <style>
        table tr[nameref^="rowSetStart"] {
                    background: none !important;
                }
        #clearBtn {
            background-image: url("${rootURL}/plugin/hp-application-automation-tools-plugin/icons/uft_icons/eraser.png");
            background-size: 65px;
            width: 65px;
            margin-left: 20px;
            height:35px;
        }

        #copyPasteBtn {
            background-image: url("${rootURL}/plugin/hp-application-automation-tools-plugin/icons/uft_icons/copy_paste.png");
            background-size: 65px;
            width: 65px;
            height: 35px;
            margin-left: 10px;
        }

        LABEL.attach-previous {
            margin-left: 0 !important;
        }

        #checkBox1 {
            margin-left: 10px;
        }
    </style>

    <f:entry>

       <f:entry title="Choose to" field="fsTestType">
            <select name="fsTestType" style="width: 250px;" disabled="${onCheckFailedTest.checked}" onchange="selectValueCombo(this)">
                <j:forEach var="testType" items="${descriptor.fsTestTypes}">
                    <f:option selected="${testType.value == instance.fsTestType}" value="${testType.value}">
                        ${testType.description}
                    </f:option>
                </j:forEach>
            </select>
             <f:checkbox id="checkBox1" title="On failure scenario" field="onCheckFailedTest" name="onCheckFailedTest"  checked="${instance.onCheckFailedTest}" onclick="enableCombobox(this)"/>
       </f:entry>

       <f:entry name="selectedNode" title="Nodes" field="selectedNode">
            <select name="selectedNode" style="width: 150px;">
                <j:forEach var="node" items="${descriptor.nodes}">
                    <f:option selected="${node==instance.selectedNode}" value="${node}">
                        ${node}
                    </f:option>
                </j:forEach>
            </select>
       </f:entry>


       <f:entry title="Reruns" field="numberOfReruns">
            <f:number name="numberOfReruns" value="${instance.numberOfReruns}" default="0" style="width: 60px; float: left;"/>

            <input type="button" id="clearBtn" title="Clear all the rerun settings applied on tests" style="float: left;" onclick="clearRerunSettings()"/>

            <label id="clear" style="margin-right: 5px; margin-left: 5px; margin-top: 5px; float: left;">Clear |</label>

            <input type="button" id="copyPasteBtn" style="float: left;" title="Copy the rerun settings for the selected tests" onclick="copyPasteRerunSettings()" />
       </f:entry>

        <f:entry title="Cleanup test" field="cleanupTest">
            <f:textbox name="uftSettingsModel.cleanupTest" value="${instance.cleanupTest}" style="width: 100%"/>
        </f:entry>

        <f:entry>
            <div id="infoMessage" style="margin-top: 20px;">Select one test or more from the list bellow in order to apply the relevant options</div>
        </f:entry>

        <f:section>
            <f:entry field="rerunSettingsModels">
                <div id="testsTable">
                     <f:repeatableProperty field="rerunSettingsModels"  minimum="1" noAddButton="true" />
                </div>
            </f:entry>
        </f:section>
    </f:entry>
</j:jelly>